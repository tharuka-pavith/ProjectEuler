"""
Project Euler Problem 001: https://projecteuler.net/problem=2

---Even Fibonacci numbers---

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.

Solution: 4613732

References :
- [Wikipedia link to the topic]
- [Stackoverflow link]

"""

def fib_gen(limit: int = 1000):
    '''
    Generator function which returns a generator of fibonacci numbers up to the given limit
    
    '''
    if limit <= 0: raise ValueError
    pre_num = 0
    num = 1

    while True:
        temp = pre_num
        pre_num = num
        num = temp + pre_num
        if num < limit: yield num
        else: break


def solution(limit: int = 1000) -> int:
    """
    Returns the sum of even valued fibonacci numbers upto the given limit

    >>> solution(100)
    44
    >>> solution(10)
    10
    """
    sum = 0
    for i in fib_gen(limit):
        if i%2 == 0:
            sum += i
    
    return sum


if __name__ == "__main__":
    print(f"{solution(4_000_000) = }")
